<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fd9aa20c-9f7d-4f99-a19d-7a478793c50c" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2PsvQullNH27oew108jNIiUCDCo" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="FinalProject" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fd9aa20c-9f7d-4f99-a19d-7a478793c50c" name="Changes" comment="" />
      <created>1684258596265</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1684258596265</updated>
    </task>
    <task id="LOCAL-00001" summary="I created a Question class to store 4 Option objects and a String that holds the question. Each option has a season attributed to it. For example, a favorite sport of skiing relates to the season Winter. I'm still deciding where I'm going to store the Question objects and how to display them.">
      <created>1684260869038</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1684260869038</updated>
    </task>
    <task id="LOCAL-00002" summary="I'm still in the beginning pages of my project. I am trying to reason out the logic for my game. I was able to print something on the screen and get the display function to work properly. I also generated some new questions for the Guess the season quiz and continued to update my final project plan.">
      <created>1684393698326</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1684393698326</updated>
    </task>
    <task id="LOCAL-00003" summary="Today in class, I worked in Main and more specifically in setup() (lines 24-37). Using Ms. Greyson's advice, I created a 2D array of Strings. Each row contains String information that will correspond to a specific question. The first column of each row contains the question name in the form of a String.">
      <created>1684434362202</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1684434362202</updated>
    </task>
    <task id="LOCAL-00004" summary="Today in class, I worked in Main and more specifically in setup() (lines 24-37). Using Ms. Greyson's advice, I created a 2D array of Strings. Each row contains String information that will correspond to a specific question. The first column of each row contains the question name in the form of a String, the second column contains option A, the third column contains option B, the fourth column contains option c, and the fifth column contains option d. Right now each option will have a certain season corresponding to it.">
      <created>1684484921584</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1684484921584</updated>
    </task>
    <task id="LOCAL-00005" summary="I didn't have much time to work on the project for homework last night, but will put in more work over the weekend. I started working on the visual ellipses for my Question class.">
      <created>1684531027754</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1684531027754</updated>
    </task>
    <task id="LOCAL-00006" summary="In class today, I worked on the display features of the question class, and created a Question instance variable that would be reset after each question was displayed. The display of each question consists of 4 ellipses with A, B, C, and D at the center of each. My goal is to display each option to the right of it's corresponding option letter.">
      <created>1684538944283</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1684538944283</updated>
    </task>
    <task id="LOCAL-00007" summary="I continued working on display. Now the options, questions, and letter bubbles show up :)">
      <created>1684546826928</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1684546826928</updated>
    </task>
    <task id="LOCAL-00008" summary="For homework, I worked on the formatting of the question on the screen and changing the color of the option bubbles. I am planning on working on the mouseClicked method more for homework. The goal is to detect which bubble is pressed and to subsequently increment ints summer, fall, winter, or spring based on which season the selection option corresponds to. The program will visually portray a clicked bubble by changing the color to a darker color upon the click.">
      <created>1684732987269</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1684732987270</updated>
    </task>
    <task id="LOCAL-00009" summary="For additional homework, I worked on the visuals for clicking each button. Now when a letter is pressed (a, b, c, or d) the corresponding bubble will turn red which indicates which option has been selected. I am still working on the resetQuestion() feature which will move to the next question as soon as the user decides which option they are satisfied with and press return.">
      <created>1684821038674</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1684821038674</updated>
    </task>
    <task id="LOCAL-00010" summary="I completed the class work session on 5/23. My questions now reset when the user presses return! Additionally, I created an answers array that has a length of 4. Each index corresponds to an option (a,b,c, or d), and the selected option when the user presses enter will be used to increment the corresponding spot in the answers array. This records which season the user is picking. I am going to work on generating my questions randomly next, and returning a guess of the user's favorite season based on their choices.">
      <created>1684875775782</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1684875775782</updated>
    </task>
    <task id="LOCAL-00011" summary="Almost finished quiz">
      <created>1684971490945</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1684971490945</updated>
    </task>
    <task id="LOCAL-00012" summary="Adding on: almost finished quiz. I met with Ms. Greyson and worked on the part of the program that ends the quiz for the user after 6 questions.">
      <created>1685032875769</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1685032875769</updated>
    </task>
    <option name="localTasksCounter" value="13" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="I created a Question class to store 4 Option objects and a String that holds the question. Each option has a season attributed to it. For example, a favorite sport of skiing relates to the season Winter. I'm still deciding where I'm going to store the Question objects and how to display them." />
    <MESSAGE value="I'm still in the beginning pages of my project. I am trying to reason out the logic for my game. I was able to print something on the screen and get the display function to work properly. I also generated some new questions for the Guess the season quiz and continued to update my final project plan." />
    <MESSAGE value="Today in class, I worked in Main and more specifically in setup() (lines 24-37). Using Ms. Greyson's advice, I created a 2D array of Strings. Each row contains String information that will correspond to a specific question. The first column of each row contains the question name in the form of a String." />
    <MESSAGE value="Today in class, I worked in Main and more specifically in setup() (lines 24-37). Using Ms. Greyson's advice, I created a 2D array of Strings. Each row contains String information that will correspond to a specific question. The first column of each row contains the question name in the form of a String, the second column contains option A, the third column contains option B, the fourth column contains option c, and the fifth column contains option d. Right now each option will have a certain season corresponding to it." />
    <MESSAGE value="I didn't have much time to work on the project for homework last night, but will put in more work over the weekend. I started working on the visual ellipses for my Question class." />
    <MESSAGE value="In class today, I worked on the display features of the question class, and created a Question instance variable that would be reset after each question was displayed. The display of each question consists of 4 ellipses with A, B, C, and D at the center of each. My goal is to display each option to the right of it's corresponding option letter." />
    <MESSAGE value="I continued working on display. Now the options, questions, and letter bubbles show up :)" />
    <MESSAGE value="For homework, I worked on the formatting of the question on the screen and changing the color of the option bubbles. I am planning on working on the mouseClicked method more for homework. The goal is to detect which bubble is pressed and to subsequently increment ints summer, fall, winter, or spring based on which season the selection option corresponds to. The program will visually portray a clicked bubble by changing the color to a darker color upon the click." />
    <MESSAGE value="For additional homework, I worked on the visuals for clicking each button. Now when a letter is pressed (a, b, c, or d) the corresponding bubble will turn red which indicates which option has been selected. I am still working on the resetQuestion() feature which will move to the next question as soon as the user decides which option they are satisfied with and press return." />
    <MESSAGE value="I completed the class work session on 5/23. My questions now reset when the user presses return! Additionally, I created an answers array that has a length of 4. Each index corresponds to an option (a,b,c, or d), and the selected option when the user presses enter will be used to increment the corresponding spot in the answers array. This records which season the user is picking. I am going to work on generating my questions randomly next, and returning a guess of the user's favorite season based on their choices." />
    <MESSAGE value="Almost finished quiz" />
    <MESSAGE value="Adding on: almost finished quiz. I met with Ms. Greyson and worked on the part of the program that ends the quiz for the user after 6 questions." />
    <option name="LAST_COMMIT_MESSAGE" value="Adding on: almost finished quiz. I met with Ms. Greyson and worked on the part of the program that ends the quiz for the user after 6 questions." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/Main.java</url>
          <line>58</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/FinalProject$Main.ic" NAME="Main Coverage Results" MODIFIED="1684532311517" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>